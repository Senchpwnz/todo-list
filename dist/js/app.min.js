/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

<<<<<<< HEAD
eval("__webpack_require__.r(__webpack_exports__);\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n    const CREATION_INPUT = document.querySelector(\"#creation__input\");\r\n    const CREATION_BUTTON = document.querySelector(\"#creation__button\");\r\n    const TO_DO_LIST = document.querySelector(\"#todo__list\");\r\n    const DONE_LIST = document.querySelector(\"#done__list\");\r\n\r\n    let toDoStorage, doneStorage, nextId;\r\n\r\n    if (!localStorage.getItem(\"toDoStorage\")) {\r\n        toDoStorage = [];\r\n        localStorage.setItem(\"toDoStorage\", JSON.stringify(toDoStorage));\r\n    } else {\r\n        toDoStorage = JSON.parse(localStorage.getItem(\"toDoStorage\"))\r\n    }\r\n    if (!localStorage.getItem(\"doneStorage\")) {\r\n        doneStorage = [];\r\n        localStorage.setItem(\"doneStorage\", JSON.stringify(doneStorage));\r\n    } else {\r\n        doneStorage = JSON.parse(localStorage.getItem(\"doneStorage\"))\r\n    }\r\n    if (!localStorage.getItem(\"nextId\")) {\r\n        nextId = 1;\r\n        localStorage.setItem(\"nextId\", nextId)\r\n    } else {\r\n        nextId = localStorage.getItem(\"nextId\")\r\n    }\r\n\r\n\r\n\r\n    const toDoApp = {\r\n        creationInput: CREATION_INPUT,\r\n        creationButton: CREATION_BUTTON,\r\n        nextId: nextId,\r\n        todo: {\r\n            list: TO_DO_LIST,\r\n            storage: toDoStorage,\r\n            sort() {\r\n                let sorted = this.storage.sort(function (a, b) {\r\n                    if (a.id > b.id) {\r\n                        return 1;\r\n                    }\r\n                    if (a.id < b.id) {\r\n                        return -1;\r\n                    }\r\n                })\r\n                this.storage = sorted;\r\n            }\r\n        },\r\n        done: {\r\n            list: DONE_LIST,\r\n            storage: doneStorage,\r\n            sort() {\r\n                let sorted = this.storage.sort(function (a, b) {\r\n                    if (a.id > b.id) {\r\n                        return 1;\r\n                    }\r\n                    if (a.id < b.id) {\r\n                        return -1;\r\n                    }\r\n                })\r\n                this.storage = sorted;\r\n            }\r\n        },\r\n        loadItems() {\r\n            let toDoItems = this.todo.storage;\r\n            let doneItems = this.done.storage;\r\n\r\n            toDoItems.forEach(element => {\r\n                let id = element.id;\r\n                let text = element.text;\r\n\r\n\r\n                let li = document.createElement(\"li\");\r\n                li.classList.add(\"todo__item\");\r\n                li.dataset.id = id;\r\n                li.innerHTML = `<div class=\"todo__icons\">\\n\\t<div class=\"icon_done\"></div>\\n\\t<div class=\"icon_delete\"></div>\\n\\t<div class=\"icon_edit\"></div>\\n\\t<div class=\"icon_update\"></div>\\n\\t<div class=\"icon_cancel\"></div>\\n</div>\\n<div class=\"todo__text\">\\n\\t<input type=\"text\" class=\"todo__input\" autofocus>\\n\\t<p>${element.text}</p>\\n</div>`;\r\n                this.todo.list.prepend(li);\r\n            });\r\n\r\n            doneItems.forEach(element => {\r\n                let id = element.id;\r\n                let text = element.text;\r\n\r\n                let li = document.createElement(\"li\");\r\n                li.classList.add(\"done__item\");\r\n                li.dataset.id = id;\r\n                li.innerHTML = `<div class=\"done__icons\">\\n\\t<div class=\"icon_undone\"></div>\\n\\t<div class=\"icon_delete\"></div>\\n</div>\\n<div class=\"done__text\">${element.text}</div>`;\r\n                this.done.list.prepend(li);\r\n            });\r\n            this.checkLists();\r\n        },\r\n        addItem() {\r\n            let element = {\r\n                id: this.nextId,\r\n                text: this.creationInput.value\r\n            };\r\n\r\n            let li = document.createElement(\"li\");\r\n            li.classList.add(\"todo__item\");\r\n            li.dataset.id = element.id;\r\n            li.innerHTML = `<div class=\"todo__icons\">\\n\\t<div class=\"icon_done\"></div>\\n\\t<div class=\"icon_delete\"></div>\\n\\t<div class=\"icon_edit\"></div>\\n\\t<div class=\"icon_update\"></div>\\n\\t<div class=\"icon_cancel\"></div>\\n</div>\\n<div class=\"todo__text\">\\n\\t<input type=\"text\" class=\"todo__input\">\\n\\t<p>${element.text}</p>\\n</div>`;\r\n            this.todo.list.prepend(li);\r\n\r\n            this.todo.storage.push(element);\r\n            this.nextId++;\r\n            localStorage.setItem(\"toDoStorage\", JSON.stringify(this.todo.storage));\r\n            localStorage.setItem(\"nextId\", this.nextId);\r\n            this.creationInput.value = '';\r\n            this.checkLists();\r\n        },\r\n        removeItem(item) {\r\n            let id = item.dataset.id;\r\n            let parent = item.parentNode\r\n\r\n            if (parent == this.todo.list) {\r\n                let index = this.todo.storage.findIndex(el => el.id == id)\r\n                this.todo.storage.splice(index, 1);\r\n                localStorage.setItem(\"toDoStorage\", JSON.stringify(this.todo.storage));\r\n                this.todo.list.removeChild(item);\r\n            } else if (parent == this.done.list) {\r\n                let index = this.done.storage.findIndex(el => el.id == id)\r\n                this.done.storage.splice(index, 1);\r\n                localStorage.setItem(\"doneStorage\", JSON.stringify(this.done.storage));\r\n                this.done.list.removeChild(item);\r\n            }\r\n            this.checkLists();\r\n        },\r\n        doneItem(item) {\r\n            let id = item.dataset.id;\r\n            let index = this.todo.storage.findIndex(el => el.id == id);\r\n            let element = this.todo.storage[index];\r\n\r\n            this.todo.list.removeChild(item);\r\n            this.todo.storage.splice(index, 1);\r\n            localStorage.setItem(\"toDoStorage\", JSON.stringify(this.todo.storage));\r\n\r\n            let li = document.createElement(\"li\");\r\n            li.classList.add(\"done__item\");\r\n            li.dataset.id = element.id;\r\n            li.innerHTML = `<div class=\"done__icons\">\\n\\t<div class=\"icon_undone\"></div>\\n\\t<div class=\"icon_delete\"></div>\\n</div>\\n<div class=\"done__text\">${element.text}</div>`;\r\n\r\n            this.done.storage.push(element)\r\n\r\n            if (this.done.storage.length == 1) {\r\n                this.done.list.append(li);\r\n\r\n            } else {\r\n                this.done.sort();\r\n                let last = this.done.storage.length - 1;\r\n                let i = this.done.storage.findIndex(el => el.id == element.id);\r\n\r\n                if (i == 0) {\r\n                    this.done.list.append(li);\r\n\r\n                } else if (i == last) {\r\n                    this.done.list.prepend(li);\r\n\r\n                } else {\r\n                    let list = this.done.list.querySelectorAll(\"li\");\r\n                    let liBefore = list[last - i];\r\n                    liBefore.before(li);\r\n                }\r\n            }\r\n            localStorage.setItem(\"doneStorage\", JSON.stringify(this.done.storage))\r\n            this.checkLists();\r\n        },\r\n        undoItem(item) {\r\n            let id = item.dataset.id;\r\n            let index = this.done.storage.findIndex(el => el.id == id);\r\n            let element = this.done.storage[index];\r\n\r\n            this.done.list.removeChild(item);\r\n            this.done.storage.splice(index, 1);\r\n            localStorage.setItem(\"doneStorage\", JSON.stringify(this.done.storage));\r\n\r\n            let li = document.createElement(\"li\");\r\n            li.classList.add(\"todo__item\");\r\n            li.dataset.id = element.id;\r\n            li.innerHTML = `<div class=\"todo__icons\">\\n\\t<div class=\"icon_done\"></div>\\n\\t<div class=\"icon_delete\"></div>\\n\\t<div class=\"icon_edit\"></div>\\n\\t<div class=\"icon_update\"></div>\\n\\t<div class=\"icon_cancel\"></div>\\n</div>\\n<div class=\"todo__text\">\\n\\t<input type=\"text\" class=\"todo__input\">\\n\\t<p>${element.text}</p>\\n</div>`;\r\n            this.todo.storage.push(element);\r\n\r\n            if (this.todo.storage.length == 1) {\r\n                this.todo.list.append(li);\r\n\r\n            } else {\r\n                this.todo.sort();\r\n                let last = this.todo.storage.length - 1;\r\n                let i = this.todo.storage.findIndex(el => el.id == element.id);\r\n\r\n                if (i == 0) {\r\n                    this.todo.list.append(li);\r\n\r\n                } else if (i == last) {\r\n                    this.todo.list.prepend(li);\r\n\r\n                } else {\r\n                    let list = this.todo.list.querySelectorAll(\"li\");\r\n                    let liBefore = list[last - i];\r\n                    liBefore.before(li);\r\n                }\r\n            }\r\n            localStorage.setItem(\"toDoStorage\", JSON.stringify(this.todo.storage));\r\n            this.checkLists();\r\n        },\r\n        editItem(item) {\r\n            let itemText = item.querySelector(\"p\");\r\n            let itemInput = item.querySelector(\".todo__input\");\r\n            let iconDone = item.querySelector(\".icon_done\");\r\n            let iconEdit = item.querySelector(\".icon_edit\");\r\n            let iconUpdate = item.querySelector(\".icon_update\");\r\n            let iconCancel = item.querySelector(\".icon_cancel\");\r\n\r\n            let elementsToHide = [itemText, iconDone, iconEdit];\r\n            let elementsToShow = [itemInput, iconUpdate, iconCancel];\r\n\r\n            item.classList.toggle(\"back-color\");\r\n            itemInput.value = itemText.innerHTML\r\n\r\n            elementsToHide.forEach(el => el.classList.toggle(\"hide\"));\r\n            elementsToShow.forEach(el => el.classList.toggle(\"show\"));\r\n            itemInput.focus();\r\n\r\n            let itemUpdate = () => {\r\n                let newText = itemInput.value;\r\n                let id = item.dataset.id;\r\n                let index = this.todo.storage.findIndex(el => el.id == id);\r\n\r\n                this.todo.storage[index].text = newText;\r\n                localStorage.setItem(\"toDoStorage\", JSON.stringify(this.todo.storage));\r\n                itemText.innerHTML = newText;\r\n\r\n                item.classList.toggle(\"back-color\");\r\n                elementsToHide.forEach(el => el.classList.toggle(\"hide\"));\r\n                elementsToShow.forEach(el => el.classList.toggle(\"show\"));\r\n\r\n                removeListeners();\r\n            }\r\n\r\n            let itemCancelEdit = () => {\r\n                item.classList.toggle(\"back-color\");\r\n\r\n                elementsToHide.forEach(el => el.classList.toggle(\"hide\"));\r\n                elementsToShow.forEach(el => el.classList.toggle(\"show\"));\r\n\r\n                removeListeners();\r\n            }\r\n            let keyPressed = (e) => {\r\n                if (e.keyCode == 13) {\r\n                    itemUpdate();\r\n                } else if (e.keyCode == 27) {\r\n                    itemCancelEdit();\r\n                }\r\n            }\r\n\r\n            itemInput.addEventListener(\"keydown\", keyPressed)\r\n            iconUpdate.addEventListener(\"click\", itemUpdate)\r\n            iconCancel.addEventListener(\"click\", itemCancelEdit)\r\n\r\n\r\n            function removeListeners() {\r\n                itemInput.removeEventListener(\"keydown\", keyPressed);\r\n                iconUpdate.removeEventListener(\"click\", itemUpdate);\r\n                iconCancel.removeEventListener(\"click\", itemCancelEdit);\r\n            }\r\n        },\r\n        checkLists() {\r\n            let toDoLength = this.todo.list.querySelectorAll(\"li\").length;\r\n            let todo = document.querySelector(\".todo\");\r\n            let doneLength = this.done.list.querySelectorAll(\"li\").length;\r\n            let done = document.querySelector(\".done\")\r\n\r\n            if (toDoLength == 0) {\r\n\r\n                todo.classList.add(\"hide\");\r\n            } else {\r\n\r\n                todo.classList.remove(\"hide\");\r\n            }\r\n            if (doneLength == 0) {\r\n\r\n                done.classList.add(\"hide\");\r\n            } else {\r\n\r\n                done.classList.remove(\"hide\");\r\n            }\r\n        }\r\n    };\r\n\r\n    toDoApp.loadItems();\r\n\r\n    CREATION_BUTTON.addEventListener(\"click\", function () {\r\n        toDoApp.addItem();\r\n    });\r\n    TO_DO_LIST.addEventListener(\"click\", function (e) {\r\n        if (e.target.classList.contains(\"icon_delete\")) {\r\n            let item = e.target.parentNode.parentNode;\r\n            toDoApp.removeItem(item);\r\n        }\r\n        if (e.target.classList.contains(\"icon_done\")) {\r\n            let item = e.target.parentNode.parentNode;\r\n            toDoApp.doneItem(item);\r\n        }\r\n        if (e.target.classList.contains(\"icon_edit\")) {\r\n            let item = e.target.parentNode.parentNode;\r\n            toDoApp.editItem(item);\r\n        }\r\n    });\r\n    DONE_LIST.addEventListener(\"click\", function (e) {\r\n        if (e.target.classList.contains(\"icon_delete\")) {\r\n            let item = e.target.parentNode.parentNode;\r\n            toDoApp.removeItem(item);\r\n        }\r\n        if (e.target.classList.contains(\"icon_undone\")) {\r\n            let item = e.target.parentNode.parentNode;\r\n            toDoApp.undoItem(item);\r\n        }\r\n    });\r\n\r\n\r\n\r\n});\r\n\r\n\n\n//# sourceURL=webpack://todo-list/./src/js/app.js?");
=======
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_getIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/getIndex.js */ \"./src/js/modules/getIndex.js\");\n/* harmony import */ var _modules_sortStorage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/sortStorage.js */ \"./src/js/modules/sortStorage.js\");\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n    const creationInput = document.querySelector(\"#creation__input\");\r\n    const creationButton = document.querySelector(\"#creation__button\");\r\n    const toDoList = document.querySelector(\"#todo__list\");\r\n    const doneList = document.querySelector(\"#done__list\");\r\n\r\n    let toDoStorage, doneStorage, nextId\r\n\r\n    if (!localStorage.getItem(\"toDoStorage\")) {\r\n        toDoStorage = [];\r\n        localStorage.setItem(\"toDoStorage\", JSON.stringify(toDoStorage));\r\n    } else {\r\n        toDoStorage = JSON.parse(localStorage.getItem(\"toDoStorage\"))\r\n    }\r\n    if (!localStorage.getItem(\"doneStorage\")) {\r\n        doneStorage = [];\r\n        localStorage.setItem(\"doneStorage\", JSON.stringify(doneStorage));\r\n    } else {\r\n        doneStorage = JSON.parse(localStorage.getItem(\"doneStorage\"))\r\n    }\r\n    if (!localStorage.getItem(\"nextId\")) {\r\n        nextId = 1;\r\n        localStorage.setItem(\"nextId\", nextId)\r\n    } else {\r\n        nextId = localStorage.getItem(nextId)\r\n    }\r\n\r\n\r\n    const toDoApp = {\r\n        creationInput: creationInput,\r\n        creationButton: creationButton,\r\n        nextId: nextId,\r\n        todo: {\r\n            list: toDoList,\r\n            storage: toDoStorage,\r\n            getItemIndex(id) {\r\n                return (0,_modules_getIndex_js__WEBPACK_IMPORTED_MODULE_0__.getIndex)(id, this.storage);\r\n            },\r\n            sort() {\r\n                let arr = this.storage;\r\n                this.storage = (0,_modules_sortStorage_js__WEBPACK_IMPORTED_MODULE_1__.sortStorage)(arr)\r\n            }\r\n        },\r\n        done: {\r\n            list: doneList,\r\n            storage: doneStorage,\r\n            getItemIndex(id) {\r\n                return (0,_modules_getIndex_js__WEBPACK_IMPORTED_MODULE_0__.getIndex)(id, this.storage);\r\n            },\r\n            sort() {\r\n                let arr = this.storage;\r\n                this.storage = (0,_modules_sortStorage_js__WEBPACK_IMPORTED_MODULE_1__.sortStorage)(arr)\r\n            }\r\n        },\r\n        loadItems() {\r\n            let toDoItems = this.todo.storage;\r\n            let doneItems = this.done.storage;\r\n\r\n            toDoItems.forEach(element => {\r\n                let id = element.id;\r\n                let text = element.text;\r\n\r\n                let li = document.createElement(\"li\");\r\n                li.classList.add(\"todo__item\");\r\n                li.dataset.id = id;\r\n                li.innerHTML = `<div class=\"todo__icons\">\\n\\t<div class=\"icon_done\"></div>\\n\\t<div class=\"icon_delete\"></div>\\n\\t<div class=\"icon_edit\"></div>\\n\\t<div class=\"icon_update\"></div>\\n\\t<div class=\"icon_cancel\"></div>\\n</div>\\n<div class=\"todo__text\">\\n\\t<input type=\"text\">\\n\\t<p>${newToDo.text}</p>\\n</div>`\r\n            });\r\n\r\n            doneItems.forEach(element => {\r\n                let id = element.id;\r\n                let text = element.text;\r\n\r\n                let li = document.createElement(\"li\");\r\n                li.classList.add(\"done__item\");\r\n                li.dataset.id = id;\r\n                li.innerHTML = `<div class=\"done__icons\">\\n\\t<div class=\"icon_undone\"></div>\\n\\t<div class=\"icon_delete\"></div>\\n</div>\\n<div class=\"done__text\">learn html</div>`\r\n            });\r\n        },\r\n        addItem() {\r\n            let newToDo = {\r\n                id: this.nextId,\r\n                text: this.creationInput.value\r\n            };\r\n\r\n            let li = document.createElement(\"li\");\r\n            li.classList.add(\"todo__item\");\r\n            li.dataset.id = newToDo.id;\r\n            li.innerHTML = `<div class=\"todo__icons\">\\n\\t<div class=\"icon_done\"></div>\\n\\t<div class=\"icon_delete\"></div>\\n\\t<div class=\"icon_edit\"></div>\\n\\t<div class=\"icon_update\"></div>\\n\\t<div class=\"icon_cancel\"></div>\\n</div>\\n<div class=\"todo__text\">\\n\\t<input type=\"text\">\\n\\t<p>${newToDo.text}</p>\\n</div>`\r\n            this.todo.list.append(li);\r\n\r\n            this.todo.storage.push(newToDo);\r\n            this.nextId++;\r\n            localStorage.setItem(\"toDoStorage\", JSON.stringify(this.todo.storage));\r\n            localStorage.setItem(\"nextId\", this.nextId);\r\n            this.creationInput.value = '';\r\n        },\r\n        removeItem(item) {\r\n            let itemId = item.dataset.id;\r\n            let parent = item.parentNode\r\n            if (parent == this.todo.list) {\r\n                let index = this.todo.getItemIndex(itemId);\r\n                this.todo.storage.splice(index, 1);\r\n                localStorage.setItem(\"toDoStorage\", JSON.stringify(this.todo.storage));\r\n                this.todo.list.removeChild(item);\r\n            } else if (parent == this.done.list) {\r\n                let index = this.done.getItemIndex(itemId);\r\n                this.done.storage.splice(index, 1);\r\n                localStorage.setItem(\"toDoStorage\", JSON.stringify(this.todo.storage));\r\n                this.done.storage.removeChild(item);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    creationButton.addEventListener(\"click\", function () {\r\n        toDoApp.addItem();\r\n    });\r\n    toDoList.addEventListener(\"click\", function (e) {\r\n        if (e.target.classList.contains(\"icon_delete\")) {\r\n            let itemToRemove = e.target.parentNode.parentNode;\r\n            toDoApp.removeItem(itemToRemove)\r\n        }\r\n    });\r\n\r\n\r\n});\r\n\r\n\n\n//# sourceURL=webpack://todo-list/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/getIndex.js":
/*!************************************!*\
  !*** ./src/js/modules/getIndex.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getIndex\": () => (/* binding */ getIndex)\n/* harmony export */ });\nconst getIndex = (id, arr) => {\r\n    for (i = 0; i < arr.length < i; i++) {\r\n        if (arr[i].id == id) {\r\n            return i;\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://todo-list/./src/js/modules/getIndex.js?");

/***/ }),

/***/ "./src/js/modules/sortStorage.js":
/*!***************************************!*\
  !*** ./src/js/modules/sortStorage.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sortStorage\": () => (/* binding */ sortStorage)\n/* harmony export */ });\nconst sortStorage = (arr) => {\r\n    let sorted = arr.sort(function (a, b) {\r\n        if (a.id > b.id) {\r\n            return 1;\r\n        }\r\n        if (a.id < b.id) {\r\n            return -1;\r\n        }\r\n    });\r\n    return sorted;\r\n}\n\n//# sourceURL=webpack://todo-list/./src/js/modules/sortStorage.js?");
>>>>>>> 3dedd6eb29dfefa66fd1dea4143440c0c65d420e

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;